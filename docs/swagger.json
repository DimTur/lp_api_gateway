{
    "swagger": "2.0",
    "info": {
        "description": "The project is only in its initial stages.",
        "title": "Learning Platform API",
        "contact": {
            "name": "API Support"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/check_otp": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and sends OTP code to chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login by telegram bot",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.CheckOTPAndLogIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.CheckOTPAndLogIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.CheckOTPAndLogInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/create_channel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new channel with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Create a new channel",
                "parameters": [
                    {
                        "description": "Channel creation parameters",
                        "name": "lpmodels.CreateChannel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lpmodels.CreateChannel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.CreateChannelResponce"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/get_channel/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns channel information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get channel information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.GetChannelResponce"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/learning_group/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and returns lg info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Get learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.GetLgByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Delete learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.DeleteLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Update learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Getting parameters",
                        "name": "learninggrouphandler.UpdateLearningGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.UpdateLearningGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.UpdateLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/learning_groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows user id and returns all relevant learning groups.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Get learning groups relevant for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.GetLearningGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group info and create it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Create a new learning group",
                "parameters": [
                    {
                        "description": "Creating parameters",
                        "name": "learninggrouphandler.CreateLearningGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.CreateLearningGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.CreateLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/update_info": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allow users to change their profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change self user info",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "authhandler.UpdateUserInfoReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authhandler.UpdateUserInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.UpdateUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_in": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.LogIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.LogIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_in_by_tg": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and sends OTP code to chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login by telegram bot",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.LogInViaTg",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.LogInViaTg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingInByTgResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_up": {
            "post": {
                "description": "This endpoint allows users to register with an email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration parameters",
                        "name": "ssomodels.RegisterUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingUpResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authhandler.CheckOTPAndLogInResponse": {
            "type": "object",
            "properties": {
                "accsessToken": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "authhandler.SingInByTgResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "authhandler.SingInResponse": {
            "type": "object",
            "properties": {
                "accsessToken": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "authhandler.SingUpResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "authhandler.UpdateUserInfoReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tg_link": {
                    "type": "string"
                }
            }
        },
        "authhandler.UpdateUserInfoResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "channelshandler.CreateChannelResponce": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "channelshandler.GetChannelResponce": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/lpmodels.GetChannelResponse"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.CreateLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.CreateLearningGroupRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "learninggrouphandler.DeleteLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.GetLearningGroupsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "learningGroups": {
                    "$ref": "#/definitions/ssomodels.GetLGroupsResp"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.GetLgByIDResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "learningGroup": {
                    "$ref": "#/definitions/ssomodels.GetLgByIDResp"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.UpdateLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.UpdateLearningGroupRequest": {
            "type": "object",
            "properties": {
                "group_admins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "learners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lpmodels.CreateChannel": {
            "type": "object",
            "required": [
                "created_by",
                "name"
            ],
            "properties": {
                "created_by": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lpmodels.GetChannelResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.Plan"
                    }
                }
            }
        },
        "lpmodels.Plan": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ssomodels.CheckOTPAndLogIn": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "ssomodels.GetLGroupsResp": {
            "type": "object",
            "properties": {
                "learningGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.LearningGroup"
                    }
                }
            }
        },
        "ssomodels.GetLgByIDResp": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "groupAdmins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.GroupAdmins"
                    }
                },
                "id": {
                    "type": "string"
                },
                "learners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.Learner"
                    }
                },
                "modifiedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.GroupAdmins": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.Learner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LearningGroup": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LogIn": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LogInViaTg": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "ssomodels.RegisterUser": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}