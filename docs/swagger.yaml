openapi: 3.0.1
info:
  version: 1.0.0
  title: Learning platform API
  description: API for education, checking result/statistics and create tasks

paths: 
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict - User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity - Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
      responses:
        '200':
          description: User successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginUserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Account locked or inactive
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity - Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /refresh_token:
    post:
      summary: Refresh the access token using a refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Access token successfully refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
        '400':
          description: Bad Request - Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized or invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Refresh token is invalid or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - User or session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /create_channel:
    post:
      summary: Create new channel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
      responses:
        '200':
          description: New channel successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelResponse'
        '400':
          description: Bad Request - Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - User not authorized to create a channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Unprocessable Entity - Validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /channels/{id}:
    get:
      summary: Get channel by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the channel to retrieve
      responses:
        '200':
          description: Channel details successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelResponse'
        '400':
          description: Bad Request - Invalid or missing parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - User not authorized to access this channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found - Channel not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    RegisterUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the new user
        password:
          type: string
          description: Password of the new user
      required:
        - email
        - password

    LoginUserRequest:
      type: object
      properties:
        email:
          type: string
          description: Email of the existing user
        password:
          type: string
          description: Password of the existing user
      required:
        - email
        - password

    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          description: Token used to obtain a new access token
      required:
        - refreshToken

    CreateChannelRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the new channel
        description:
          type: string
          description: Description of the new channel
        created_by:
          type: integer
          description: User ID who creates the new channel
        last_modified_by:
          type: integer
          description: User ID who updates the channel
        public:
          type: boolean
          description: Whether the channel is public or not
      required:
        - name
        - created_by

    RegisterUserResponse:
      type: object
      properties:
        user_id:
          type: integer
          description: id of the newly registered user
      required:
        - user_id

    LoginUserResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT token for accessing protected routes
        refreshToken:
          type: string
          description: Token used to obtain a new access token without requiring the user to re-authenticate.
      required:
        - accessToken
        - refreshToken

    RefreshTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: New JWT token for accessing protected routes
      required:
        - accessToken

    CreateChannelResponse:
      type: object
      properties:
        channel_id:
          type: integer
          description: id of the newly created channel
      required:
        - channel_id

    GetChannelResponse:
      type: object
      properties:
        name:
          type: string
          description: Name of the channel
        description:
          type: string
          description: Description of the channel
        created_by:
          type: integer
          description: User id who created channel
        last_modified_by:
          type: integer
          description: User ID who updates the channel
        public:
          type: boolean
          description: Whether the channel is public or not
      required:
        - name
        - description
        - created_by
        - last_modified_by
        - public

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Description of the error
      required:
        - error