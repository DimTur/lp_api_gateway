basePath: /
definitions:
  authhandler.SingInResponse:
    properties:
      access_token:
        type: string
      error:
        type: string
      refresh_token:
        type: string
      status:
        type: string
    type: object
  authhandler.SingUpResponse:
    properties:
      error:
        type: string
      status:
        type: string
      success:
        type: boolean
    type: object
  channelshandler.CreateChannelResponce:
    properties:
      channel_id:
        type: integer
      error:
        type: string
      status:
        type: string
    type: object
  channelshandler.GetChannelResponce:
    properties:
      channel:
        $ref: '#/definitions/lpmodels.GetChannelResponse'
      error:
        type: string
      status:
        type: string
    type: object
  lpmodels.CreateChannel:
    properties:
      created_by:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - created_by
    - name
    type: object
  lpmodels.GetChannelResponse:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      id:
        type: integer
      lastModifiedBy:
        type: string
      modified:
        type: string
      name:
        type: string
      plans:
        items:
          $ref: '#/definitions/lpmodels.Plan'
        type: array
    type: object
  lpmodels.Plan:
    properties:
      createdAt:
        type: string
      createdBy:
        type: string
      description:
        type: string
      id:
        type: integer
      isPublished:
        type: boolean
      lastModifiedBy:
        type: string
      modified:
        type: string
      name:
        type: string
      public:
        type: boolean
    type: object
  response.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  ssomodels.LogIn:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  ssomodels.RegisterUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8000
info:
  contact:
    name: API Support
  description: The project is only in its initial stages.
  title: Learning Platform API
  version: 0.1.0
paths:
  /create_channel:
    post:
      consumes:
      - application/json
      description: This endpoint allows users to create a new channel with the specified
        data.
      parameters:
      - description: Channel creation parameters
        in: body
        name: lpmodels.CreateChannel
        required: true
        schema:
          $ref: '#/definitions/lpmodels.CreateChannel'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/channelshandler.CreateChannelResponce'
        "400":
          description: Invalid data in the request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a new channel
      tags:
      - channels
  /get_channel/{id}:
    get:
      consumes:
      - application/json
      description: This endpoint returns channel information by ID.
      parameters:
      - description: ID of the channel
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/channelshandler.GetChannelResponce'
        "400":
          description: Invalid data in the request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Channel not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: Get channel information
      tags:
      - channels
  /sing_in:
    post:
      consumes:
      - application/json
      description: This endpoint allows users to sign in using their email and password.
      parameters:
      - description: Sign-in parameters
        in: body
        name: ssomodels.LogIn
        required: true
        schema:
          $ref: '#/definitions/ssomodels.LogIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authhandler.SingInResponse'
        "400":
          description: Invalid data in the request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: User Login
      tags:
      - auth
  /sing_up:
    post:
      consumes:
      - application/json
      description: This endpoint allows users to register with an email and password.
      parameters:
      - description: Registration parameters
        in: body
        name: ssomodels.RegisterUser
        required: true
        schema:
          $ref: '#/definitions/ssomodels.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/authhandler.SingUpResponse'
        "400":
          description: Invalid data in the request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register a new user
      tags:
      - auth
security:
- ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
