// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/channels": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns channels information relevant for user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get channels information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.GetChannelsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new channel with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Create a new channel",
                "parameters": [
                    {
                        "description": "Channel creation parameters",
                        "name": "channelshandler.CreateChannelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channelshandler.CreateChannelRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.CreateChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns plan information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get plan information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/planshandler.GetPlanResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows plan id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Delete plan by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/planshandler.DeletePlanResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows plan id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Update channel by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan updating parameters",
                        "name": "planshandler.UpdatePlanRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/planshandler.UpdatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/planshandler.UpdatePlanResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns lessons information relevant for user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Get all lessons relevant for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.GetLessonsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new lesson with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Create a new lesson",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lesson creation parameters",
                        "name": "lessonshandler.CreateLessonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.CreateLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.CreateLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns lesson information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Get lesson information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.GetLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows lesson id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Delete lesson by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.DeleteLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows lesson id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lessons"
                ],
                "summary": "Update lesson by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lesson updating parameters",
                        "name": "lessonshandler.UpdateLessonRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.UpdateLessonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/lessonshandler.UpdateLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/attempts": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows user, channel, plan, lesson id and create a new lesson attempt with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Create a new lesson attempt or get it if exist not completed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/attemptshandler.TryLessonResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/image_page": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new image page with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Create a new image page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image page creation parameters",
                        "name": "pageshandler.CreateImagePageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreateImagePageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/image_page/{page_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns image information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Get image page information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.GetImagePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows image page id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Update image page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image page updating parameters",
                        "name": "pageshandler.UpdateImagePageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdateImagePageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/pages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns pages information relevant for user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Get all pages from lesson relevant for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.GetPagesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/pages/{page_id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows page id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Delete page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.DeletePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/pdf_page": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new pdf page with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Create a new pdf page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PDF page creation parameters",
                        "name": "pageshandler.CreatePDFPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreatePDFPageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/pdf_page/{page_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns pdf information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Get pdf page information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.GetPDFPageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows pdf page id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Update pdf page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PDF page updating parameters",
                        "name": "pageshandler.UpdatePDFPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdatePDFPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/question_page": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new questin page with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Create a new question page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question page creation parameters",
                        "name": "questionshandler.CreateQuestionPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questionshandler.CreateQuestionPageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/questionshandler.CreatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/question_page/{page_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns question information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get question page information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questionshandler.GetQuestionPageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows question page id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Update question page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question page updating parameters",
                        "name": "questionshandler.UpdateQuestinPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/questionshandler.UpdateQuestinPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/questionshandler.UpdatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/video_page": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new video page with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Create a new video page",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video page creation parameters",
                        "name": "pageshandler.CreateVideoPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreateVideoPageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.CreatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/lessons/{lesson_id}/video_page/{page_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns video information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Get video page information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.GetVideoPageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows video page id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pages"
                ],
                "summary": "Update video page by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the page",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video page updating parameters",
                        "name": "pageshandler.UpdateVideoPageRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdateVideoPageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pageshandler.UpdatePageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{channel_id}/plans/{plan_id}/share": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows plan id and user ids and share with.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Share plan by id",
                "parameters": [
                    {
                        "description": "Plan shering parameters",
                        "name": "planshandler.SharePlanRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/planshandler.SharePlanRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "channel_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the plan",
                        "name": "plan_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/planshandler.SharePlanResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns channel information by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Get channel information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.GetChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channel not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows channel id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Delete channel by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.DeleteChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows channel id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Update channel by id",
                "parameters": [
                    {
                        "description": "Channels getting parameters",
                        "name": "channelshandler.UpdateChannelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channelshandler.UpdateChannelRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.GetChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{id}/plans": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns plans information relevant for user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Get all plans relevant for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/planshandler.GetPlansResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows users to create a new plan with the specified data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plans"
                ],
                "summary": "Create a new plan",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Plan creation parameters",
                        "name": "planshandler.CreatePlanRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/planshandler.CreatePlanRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/planshandler.CreatePlanResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/channels/{id}/share": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows channel id and learning group id and share with.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "channels"
                ],
                "summary": "Share channel by id",
                "parameters": [
                    {
                        "description": "Channels sharing parameters",
                        "name": "channelshandler.ShareChannelRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/channelshandler.ShareChannelRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "ID of the channel",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/channelshandler.ShareChannelResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Channels not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/check_otp": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and sends OTP code to chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login by telegram bot",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.CheckOTPAndLogIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.CheckOTPAndLogIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.CheckOTPAndLogInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/learning_group/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and returns lg info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Get learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the learning group",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.GetLgByIDResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Delete learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the learning group",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.DeleteLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Update learning group by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the learning group",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Getting parameters",
                        "name": "learninggrouphandler.UpdateLearningGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.UpdateLearningGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.UpdateLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/learning_groups": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows user id and returns all relevant learning groups.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Get learning groups relevant for user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.GetLearningGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows learning group info and create it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "learning groups"
                ],
                "summary": "Create a new learning group",
                "parameters": [
                    {
                        "description": "Creating parameters",
                        "name": "learninggrouphandler.CreateLearningGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.CreateLearningGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/learninggrouphandler.CreateLGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/lessons/attempts/{lesson_attempt_id}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows question page attempt id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Update question page attempt by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the lesson attempt",
                        "name": "lesson_attempt_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Question page attempt updating parameters",
                        "name": "attemptshandler.UpdatePageAttemptRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/attemptshandler.UpdatePageAttemptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/attemptshandler.UpdatePageAttemptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Question page attempt not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/lessons/attempts/{lesson_attempt_id}/complete": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allows lesson attempt id and update it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Complete lesson attempt by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the lesson attempt",
                        "name": "lesson_attempt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/attemptshandler.UpdatePageAttemptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Question page attempt not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/lessons/{lesson_id}/attempts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint returns lesson attempts information relevant for user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attempts"
                ],
                "summary": "Get all lesson attempts relevant for user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the lesson",
                        "name": "lesson_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/attemptshandler.LessonAttemptsResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Lesson attempts not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/profile/update_info": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This endpoint allow users to change their profile.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change self user info",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "authhandler.UpdateUserInfoReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authhandler.UpdateUserInfoReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.UpdateUserInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_in": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.LogIn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.LogIn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_in_by_tg": {
            "post": {
                "description": "This endpoint allows users to sign in using their email and sends OTP code to chat.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Login by telegram bot",
                "parameters": [
                    {
                        "description": "Sign-in parameters",
                        "name": "ssomodels.LogInViaTg",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.LogInViaTg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingInByTgResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/sing_up": {
            "post": {
                "description": "This endpoint allows users to register with an email and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Registration parameters",
                        "name": "ssomodels.RegisterUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ssomodels.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/authhandler.SingUpResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data in the request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "attemptshandler.LessonAttemptsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "lessonAttempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.LessonAttempt"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "attemptshandler.TryLessonResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "questionPageAttempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.QuestionPageAttempt"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "attemptshandler.UpdatePageAttemptRequest": {
            "type": "object",
            "required": [
                "page_id",
                "question_page_attempt_id"
            ],
            "properties": {
                "page_id": {
                    "type": "integer"
                },
                "question_page_attempt_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        },
        "attemptshandler.UpdatePageAttemptResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "authhandler.CheckOTPAndLogInResponse": {
            "type": "object",
            "properties": {
                "accsessToken": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "authhandler.SingInByTgResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "authhandler.SingInResponse": {
            "type": "object",
            "properties": {
                "accsessToken": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "authhandler.SingUpResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "authhandler.UpdateUserInfoReq": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tg_link": {
                    "type": "string"
                }
            }
        },
        "authhandler.UpdateUserInfoResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "channelshandler.CreateChannelRequest": {
            "type": "object",
            "required": [
                "learning_group_id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "learning_group_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "channelshandler.CreateChannelResponse": {
            "type": "object",
            "properties": {
                "channel_id": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "channelshandler.DeleteChannelResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "channelshandler.GetChannelResponse": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/definitions/lpmodels.GetChannelResponse"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "channelshandler.GetChannelsResponse": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.Channel"
                    }
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "channelshandler.ShareChannelRequest": {
            "type": "object",
            "required": [
                "lgroup_ids"
            ],
            "properties": {
                "lgroup_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "channelshandler.ShareChannelResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "channelshandler.UpdateChannelRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.CreateLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.CreateLearningGroupRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "learninggrouphandler.DeleteLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.GetLearningGroupsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "learningGroups": {
                    "$ref": "#/definitions/ssomodels.GetLGroupsResp"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.GetLgByIDResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "learningGroup": {
                    "$ref": "#/definitions/ssomodels.GetLgByIDResp"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "learninggrouphandler.UpdateLGroupResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "learninggrouphandler.UpdateLearningGroupRequest": {
            "type": "object",
            "properties": {
                "group_admins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "learners": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.CreateLessonRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.CreateLessonResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "lessonID": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.DeleteLessonResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "lessonshandler.GetLessonResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "lesson": {
                    "$ref": "#/definitions/lpmodels.GetLessonResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.GetLessonsResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "lessons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.GetLessonResponse"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.UpdateLessonRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lessonshandler.UpdateLessonResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updateLessonResponse": {
                    "$ref": "#/definitions/lpmodels.UpdateLessonResponse"
                }
            }
        },
        "lpmodels.BasePage": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_by": {
                    "type": "string"
                },
                "lesson_id": {
                    "type": "integer"
                },
                "modified": {
                    "type": "string"
                }
            }
        },
        "lpmodels.Channel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lpmodels.GetChannelResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.Plan"
                    }
                }
            }
        },
        "lpmodels.GetLessonResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "lpmodels.GetPlanResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            }
        },
        "lpmodels.GetQuestionPage": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_by": {
                    "type": "string"
                },
                "lesson_id": {
                    "type": "integer"
                },
                "modified": {
                    "type": "string"
                },
                "option_a": {
                    "type": "string"
                },
                "option_b": {
                    "type": "string"
                },
                "option_c": {
                    "type": "string"
                },
                "option_d": {
                    "type": "string"
                },
                "option_e": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                },
                "question_type": {
                    "type": "string"
                }
            }
        },
        "lpmodels.ImagePage": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageFileUrl": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "last_modified_by": {
                    "type": "string"
                },
                "lesson_id": {
                    "type": "integer"
                },
                "modified": {
                    "type": "string"
                }
            }
        },
        "lpmodels.LessonAttempt": {
            "type": "object",
            "properties": {
                "channelID": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isComplete": {
                    "type": "boolean"
                },
                "isSuccessful": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "lessonID": {
                    "type": "integer"
                },
                "percentageScore": {
                    "type": "integer"
                },
                "planID": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "lpmodels.PDFPage": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_by": {
                    "type": "string"
                },
                "lesson_id": {
                    "type": "integer"
                },
                "modified": {
                    "type": "string"
                },
                "pdfFileUrl": {
                    "type": "string"
                },
                "pdfName": {
                    "type": "string"
                }
            }
        },
        "lpmodels.Plan": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPublished": {
                    "type": "boolean"
                },
                "lastModifiedBy": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            }
        },
        "lpmodels.QuestionPageAttempt": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "is_correct": {
                    "type": "boolean"
                },
                "lesson_attempt_id": {
                    "type": "integer"
                },
                "page_id": {
                    "type": "integer"
                },
                "user_answer": {
                    "type": "string"
                }
            }
        },
        "lpmodels.UpdateLessonResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "lpmodels.UpdatePageResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "lpmodels.UpdatePlanResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "lpmodels.VideoPage": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_modified_by": {
                    "type": "string"
                },
                "lesson_id": {
                    "type": "integer"
                },
                "modified": {
                    "type": "string"
                },
                "videoFileUrl": {
                    "type": "string"
                },
                "videoName": {
                    "type": "string"
                }
            }
        },
        "pageshandler.CreateImagePageRequest": {
            "type": "object",
            "required": [
                "image_file_url",
                "image_name"
            ],
            "properties": {
                "image_file_url": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                }
            }
        },
        "pageshandler.CreatePDFPageRequest": {
            "type": "object",
            "required": [
                "pdf_file_url",
                "pdf_name"
            ],
            "properties": {
                "pdf_file_url": {
                    "type": "string"
                },
                "pdf_name": {
                    "type": "string"
                }
            }
        },
        "pageshandler.CreatePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "pageID": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pageshandler.CreateVideoPageRequest": {
            "type": "object",
            "required": [
                "video_file_url",
                "video_name"
            ],
            "properties": {
                "video_file_url": {
                    "type": "string"
                },
                "video_name": {
                    "type": "string"
                }
            }
        },
        "pageshandler.DeletePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "pageshandler.GetImagePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "imagePage": {
                    "$ref": "#/definitions/lpmodels.ImagePage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pageshandler.GetPDFPageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "pdfpage": {
                    "$ref": "#/definitions/lpmodels.PDFPage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pageshandler.GetPagesResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "pages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.BasePage"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pageshandler.GetVideoPageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "videoPage": {
                    "$ref": "#/definitions/lpmodels.VideoPage"
                }
            }
        },
        "pageshandler.UpdateImagePageRequest": {
            "type": "object",
            "properties": {
                "image_file_url": {
                    "type": "string"
                },
                "image_name": {
                    "type": "string"
                }
            }
        },
        "pageshandler.UpdatePDFPageRequest": {
            "type": "object",
            "properties": {
                "pdf_file_url": {
                    "type": "string"
                },
                "pdf_name": {
                    "type": "string"
                }
            }
        },
        "pageshandler.UpdatePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatePageResponse": {
                    "$ref": "#/definitions/lpmodels.UpdatePageResponse"
                }
            }
        },
        "pageshandler.UpdateVideoPageRequest": {
            "type": "object",
            "properties": {
                "video_file_url": {
                    "type": "string"
                },
                "video_name": {
                    "type": "string"
                }
            }
        },
        "planshandler.CreatePlanRequest": {
            "type": "object",
            "required": [
                "learning_group_id",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "learning_group_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "planshandler.CreatePlanResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "plan_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "planshandler.DeletePlanResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "planshandler.GetPlanResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "plan": {
                    "$ref": "#/definitions/lpmodels.GetPlanResponse"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "planshandler.GetPlansResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lpmodels.GetPlanResponse"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "planshandler.SharePlanRequest": {
            "type": "object",
            "required": [
                "user_ids"
            ],
            "properties": {
                "user_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "planshandler.SharePlanResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "planshandler.UpdatePlanRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_published": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                }
            }
        },
        "planshandler.UpdatePlanResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatePlanResponse": {
                    "$ref": "#/definitions/lpmodels.UpdatePlanResponse"
                }
            }
        },
        "questionshandler.CreatePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "pageID": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "questionshandler.CreateQuestionPageRequest": {
            "type": "object",
            "required": [
                "answer",
                "option_a",
                "option_b",
                "question"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "option_a": {
                    "type": "string"
                },
                "option_b": {
                    "type": "string"
                },
                "option_c": {
                    "type": "string"
                },
                "option_d": {
                    "type": "string"
                },
                "option_e": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "questionshandler.GetQuestionPageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "questionPage": {
                    "$ref": "#/definitions/lpmodels.GetQuestionPage"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "questionshandler.UpdatePageResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatePageResponse": {
                    "$ref": "#/definitions/lpmodels.UpdatePageResponse"
                }
            }
        },
        "questionshandler.UpdateQuestinPageRequest": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "option_a": {
                    "type": "string"
                },
                "option_b": {
                    "type": "string"
                },
                "option_c": {
                    "type": "string"
                },
                "option_d": {
                    "type": "string"
                },
                "option_e": {
                    "type": "string"
                },
                "question": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "ssomodels.CheckOTPAndLogIn": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "ssomodels.GetLGroupsResp": {
            "type": "object",
            "properties": {
                "learningGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.LearningGroup"
                    }
                }
            }
        },
        "ssomodels.GetLgByIDResp": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "groupAdmins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.GroupAdmins"
                    }
                },
                "id": {
                    "type": "string"
                },
                "learners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ssomodels.Learner"
                    }
                },
                "modifiedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.GroupAdmins": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.Learner": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LearningGroup": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LogIn": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ssomodels.LogInViaTg": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "ssomodels.RegisterUser": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Learning Platform API",
	Description:      "The project is only in its initial stages.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
